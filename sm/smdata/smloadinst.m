function ind = smloadinst(file, ind, adapter, args)
% function ind = smloadinst(file, ind, adaptor, varargin)
% Add instrument from file generated by smsaveinst to rack at position ind.
% ind defaults to end+1. 
% adapter is the HW adapter driver 
% args are arguments to the instrument object constructor, e.g. gpib,
% visa or serial. If not defaults, the settings are taken from the file
% loaded. (Useful if file was created on the same system).
% to load the inst but not make an object, give adapter = 'none'; 

global smdata;

if ~exist('file','var') || isempty(file) 
    file = uigetfile('','MultiSelect','on');     
end
if ~iscell(file)
    file = {file};
end
if file{1}==0 
    return 
end

if ~exist('ind','var') || isempty(ind)
    if isfield(smdata, 'inst')
        ind = length(smdata.inst)+1;
    else
        ind = 1;
    end
end

if isempty(strfind(file, 'sminst')) %fix me 
    file = ['sminst_', file];
end
for i = 1:length(file)
load(file{i});
if ~isempty(constructor)
    if ~exist('adapter','var') || isempty(adapter) 
        switch func2str(constructor.fn) % Make object. Only works for gpib visa. Maybe rewrite for more types??
            case {'gpib', 'visa'} 
               visaInfo = instrhwinfo('visa');
               installedDrivers = visaInfo.InstalledAdaptors;
                    if ~isempty(installedDrivers)
                        if iscell(installedDrivers)
                            adapter = installedDrivers{1};
                        else
                            adapter = installedDrivers;
                        end
                    else
                        error('No VISA drivers installed');
                    end                 
            otherwise 
                adapter = {};
        end
    elseif ~iscell(adapter)
        adapter = {adapter};
    end
    if ~strcmp(adapter, 'none')     % Make instrument object. 
        if nargin >= 4
            constructor.args = args;
        end        
        inst.data.inst = constructor.fn(adapter{:}, constructor.args{:});
        set(inst.data.inst, constructor.params, constructor.vals) ;
    end
end
if exist('channels','var') % how to make it so it only adds channels if you want...?     
    if isfield(smdata,'channels')
        smdata.channels(end+1:end+length(channels)) = channels; 
        for j = 1:length(channels)
            smdata.channels(end-j+1).instchan(1) = ind;                 
        end
    else 
        smdata.channels(1:length(channels)) = channels; 
        for j = 1:length(channels)
            smdata.channels(j).instchan(1) = ind;                 
        end
    end
end

if isfield(smdata,'inst') && length(smdata.inst) >= ind
    warning('Overwriting instrument')
end

smdata.inst(ind) = inst;
smcheckdata;

end